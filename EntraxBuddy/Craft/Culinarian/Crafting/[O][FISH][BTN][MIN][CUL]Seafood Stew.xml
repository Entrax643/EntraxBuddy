<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE Profile [<!-- Profile Settings -->
<!ENTITY Seafood_Qty "99">
<!-- How many collectability to reach while farming sands -->
<!ENTITY Sand_Collect_Rate "550">
<!ENTITY CordialType_Sand "Cordial">
<!ENTITY CordialTime_Sand "Auto">
<!-- Cordial Settings on D.Tomato, D. Paprika and Cluster -->
<!ENTITY CordialType "Cordial">
<!ENTITY CordialTime "Auto">
<!-- Use Craft at your OWN RISK -->
<!ENTITY Craft "0">
<!ENTITY ID_FOOD "12861">
<!-- Set to 1 if you want(and can) use the skill -->
<!-- Tricks of The Trade -->
<!ENTITY ToT "1">
<!-- Steady Hand before PbP (recommended)-->
<!ENTITY SH_PBP "1">
<!-- Reclaim if IQ stack < 9 -->
<!ENTITY Reclaim "1">
<!-- Where do you want to port while witing / crafting-->
<!ENTITY Waiting_AetheryteId "8">]><Profile>
	<Name>[O][FISH][BTN][MIN][CUL]Seafood Stew - RB</Name>
	<KillRadius>50</KillRadius>
	<BehaviorDirectory>CustomTags</BehaviorDirectory>
	<CodeChunks>
		<CodeChunk Name="CUL">
			<![CDATA[ 	ff14bot.Managers.ChatManager.SendChat("/gs change 9");	]]>
		</CodeChunk>
		<CodeChunk name="MIN">
			<![CDATA[	ff14bot.Managers.ChatManager.SendChat("/gs change 10");	await Buddy.Coroutines.Coroutine.Sleep(2000);	if(!Core.Player.HasAura(222))	{	var result = true;	if (MovementManager.IsFlying)	{	result = await CommonTasks.Land();	await Buddy.Coroutines.Coroutine.Sleep(1000);	}		if (result && Core.Player.IsMounted)	{	await CommonTasks.StopAndDismount();	await Buddy.Coroutines.Coroutine.Sleep(1000);	}		ff14bot.Managers.Actionmanager.DoAction(238, Core.Player);	await Buddy.Coroutines.Coroutine.Sleep(2000);	}	]]>
		</CodeChunk>
		<CodeChunk name="BTN">
			<![CDATA[	ff14bot.Managers.ChatManager.SendChat("/gs change 11");	await Buddy.Coroutines.Coroutine.Sleep(2000);	if(!Core.Player.HasAura(221))	{	var result = true;	if (MovementManager.IsFlying)	{	result = await CommonTasks.Land();	await Buddy.Coroutines.Coroutine.Sleep(1000);	}		if (result && Core.Player.IsMounted)	{	Actionmanager.Dismount();	await Buddy.Coroutines.Coroutine.Sleep(1000);	}		ff14bot.Managers.Actionmanager.DoAction(221, Core.Player);	await Buddy.Coroutines.Coroutine.Sleep(2000);	}	]]>
		</CodeChunk>
		<CodeChunk Name="FSH">
			<![CDATA[ 	ff14bot.Managers.ChatManager.SendChat("/gs change 12");	]]>
		</CodeChunk>
		<CodeChunk name="ToT">
			<![CDATA[	SpellData data;	if ((CraftingManager.Condition == CraftingCondition.Good || CraftingManager.Condition == CraftingCondition.Excellent) &&	Actionmanager.CurrentActions.TryGetValue("Tricks of the Trade", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Tricks of the Trade", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	await Coroutine.Sleep(250);	]]></CodeChunk>
		<CodeChunk Name="TrickTouch">
			<![CDATA[	SpellData data;	if (CraftingManager.Condition == CraftingCondition.Good && Actionmanager.CurrentActions.TryGetValue("Precise Touch", out data) && Actionmanager.CanCast(data, null) && Core.Player.CurrentCP > 49) 	{	Actionmanager.DoAction("Precise Touch", null);	}else	{	if(Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data))	{	Actionmanager.DoAction("Hasty Touch", null);	}	}	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	await Coroutine.Sleep(250);	]]></CodeChunk>
		<CodeChunk Name="TrickTouch2">
			<![CDATA[	SpellData data;	if (CraftingManager.Condition == CraftingCondition.Good && Actionmanager.CurrentActions.TryGetValue("Precise Touch", out data) && Actionmanager.CanCast(data, null) && Core.Player.CurrentCP > 57) 	{	Actionmanager.DoAction("Precise Touch", null);	}else	{	if(Core.Player.CurrentCP > 57 && Actionmanager.CurrentActions.TryGetValue("Basic Touch", out data) && Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data))	{	Actionmanager.DoAction("Basic Touch", null);	}else	{	if(Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data))	{	Actionmanager.DoAction("Hasty Touch", null);	}	}	}	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	await Coroutine.Sleep(250);	]]></CodeChunk>
		<CodeChunk name="BBCheck">
			<![CDATA[	SpellData data;	if (CraftingManager.Condition == CraftingCondition.Excellent)	{	if(Actionmanager.CurrentActions.TryGetValue("Byregot's Blessing", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Byregot's Blessing", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Careful Synthesis II", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Careful Synthesis II", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Careful Synthesis II", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Careful Synthesis II", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Careful Synthesis II", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Careful Synthesis II", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	}	await Coroutine.Sleep(250);        	]]></CodeChunk>
		<CodeChunk name="ReclaimCheck">
			<![CDATA[	SpellData data;	if (Core.Player.CharacterAuras.GetAuraStacksById(251) < 9) 	{	if (Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Hasty Touch", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);                                  	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Reclaim", out data) && Actionmanager.CanCast(data, null))	{	Actionmanager.DoAction("Reclaim", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Hasty Touch", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);                                  	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Hasty Touch", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Hasty Touch", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Hasty Touch", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Hasty Touch", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Hasty Touch", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	await Coroutine.Sleep(250);	if (Actionmanager.CurrentActions.TryGetValue("Hasty Touch", out data) && Actionmanager.CanCast(data, null)) 	{	Actionmanager.DoAction("Hasty Touch", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	}	await Coroutine.Sleep(250);	]]></CodeChunk>
		<CodeChunk name="InnovationCheck">
			<![CDATA[	SpellData data;	if (!(CraftingManager.Condition == CraftingCondition.Excellent || CraftingManager.Condition == CraftingCondition.Good))	{	if (Core.Player.CurrentCP > 41 && Actionmanager.CurrentActions.TryGetValue("Innovation", out data) && Actionmanager.CanCast(data, null))	{	Actionmanager.DoAction("Innovation", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	else	{	if (Core.Player.CurrentCP > 37 && Actionmanager.CurrentActions.TryGetValue("Observe", out data) && Actionmanager.CanCast(data, null))	{	Actionmanager.DoAction("Observe", null);	await Coroutine.Wait(10000, () => CraftingManager.AnimationLocked);	await Coroutine.Wait(Timeout.Infinite, () => !CraftingManager.AnimationLocked);	}	}	}	await Coroutine.Sleep(250);	]]></CodeChunk>
		<CodeChunk Name="Dismount">
			<![CDATA[	ff14bot.Managers.Actionmanager.Dismount();	]]>
		</CodeChunk>
	</CodeChunks>
	<Order>
		<StopCrafting/>
		<While Condition="ItemCount(12903) &lt; (&Seafood_Qty;*2) or ItemCount(6148) &lt; (&Seafood_Qty;*2) or ItemCount(19) &lt; &Seafood_Qty; or ItemCount(14) &lt; (&Seafood_Qty; * 2) or ItemCount(12936) &lt; &Seafood_Qty; or ItemCount(12733) &lt; &Seafood_Qty; or ItemCount(12722) &lt; &Seafood_Qty; or ItemCount(12718) &lt; &Seafood_Qty;">
			<!-- Dravanian Paprika -->
			<If Condition="ItemCount(12903) &lt; (&Seafood_Qty;*2)">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I don't have enough Dravanian Paprika !"/>
				<If Condition="not(IsTimeBetween(18,19))">
					<ExLog Color="#FFC0CB" Message="Seafood Stew | But I can't gather them because it's not between 6-7 PM !"/>
				</If>
				<If Condition="IsTimeBetween(18,19)">
					<If Condition="not IsOnMap(397)">
						<TeleportTo Name="Falcon's Nest" AetheryteId="71" />
						<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
							<RunCode Name="BTN"/>
						</If>
						<ExFlyTo XYZ="447.5304, 231.6418, 698.439" Radius="3.0" />
					</If>
					<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
						<RunCode Name="BTN"/>
					</If>
					<ExFlyTo XYZ="180.2685, 248.9064, 505.7552" Radius="3.0" />
					<WaitWhile Condition ="IsTimeBetween(18,19)" />
					<ExGather DiscoverUnknowns="true" loops="1" spawnTimeout="15" CordialType="&CordialType;" CordialTime="&CordialTime;" GatherIncrease="YieldAndQuality">
						<GatherObjects>
							<GatherObject>Legendary Lush Vegetation Patch</GatherObject>
						</GatherObjects>
						<ItemNames>
							<ItemName>Dravanian Paprika</ItemName>
						</ItemNames>
						<GatherRotation>Unspoiled</GatherRotation>
						<GatherSpots>
							<StealthApproachGatherSpot stealthLocation="173.1689, 223.8338, 505.8753" nodeLocation="165.6344, 223.1127, 487.2748"/>
							<StealthApproachGatherSpot ReturnToStealthLocation="false" stealthLocation="220.8415, 223.6744, 529.7012" nodeLocation="230.707, 223.3473, 529.1682"/>
						</GatherSpots>
						<HotSpots>
							<HotSpot XYZ="180.2685, 248.9064, 505.7552" Radius="200"/>
						</HotSpots>
					</ExGather>
				</If>
			</If>
			<If Condition="not(ItemCount(12903) &lt; (&Seafood_Qty;*2))">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I'm done with Dravanian Paprika !"/>
			</If>
			<!-- Dzemael Tomato -->
			<If Condition="ItemCount(6148) &lt; (&Seafood_Qty;*2)">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I don't have enough Dzemael Tomato !"/>
				<If Condition="not(IsTimeBetween(12,13))">
					<ExLog Color="#FFC0CB" Message="Seafood Stew | But I can't gather them because it's not between 12 AM - 1 PM !"/>
				</If>
				<If Condition="IsTimeBetween(12,13)">
					<If Condition="not IsOnMap(137)">
						<TeleportTo Name="Wineport" AetheryteId="12" />
						<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
							<RunCode Name="BTN"/>
						</If>
					</If>
					<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
						<RunCode Name="BTN"/>
					</If>
					<ExMoveTo XYZ="-170.2747, 37.52908, 281.4099"/>
					<WaitWhile Condition ="IsTimeBetween(12,13)" />
					<ExGather DiscoverUnknowns="true" loops="1" spawnTimeout="15" CordialType="&CordialType;" CordialTime="&CordialTime;" GatherIncrease="YieldAndQuality">
						<GatherObjects>
							<GatherObject>Unspoiled Lush Vegetation Patch</GatherObject>
						</GatherObjects>
						<ItemNames>
							<ItemName>Dzemael Tomato</ItemName>
						</ItemNames>
						<GatherRotation>Unspoiled</GatherRotation>
						<HotSpots>
							<HotSpot XYZ="-170.2747, 37.52908, 281.4099" Radius="120"/>
						</HotSpots>
					</ExGather>
				</If>
			</If>
			<If Condition="not(ItemCount(6148) &lt; (&Seafood_Qty;*2))">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I'm done with Dzemael Tomato !"/>
			</If>
			<!-- Duskborne Aethersand -->
			<If Condition="ItemCount(12936) &lt; &Seafood_Qty;">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I don't have enough Duskborne Aethersand !"/>
				<While Condition="ItemCount(12936) &lt; &Seafood_Qty; and not(ItemCount(6148) &lt; (&Seafood_Qty;*2) and IsTimeBetween(12,13)) and not(ItemCount(12903) &lt; (&Seafood_Qty;*2) and IsTimeBetween(18,19))">
					<ExPurify/>
					<While Condition="IsTimeBetween(0,4) and ItemCount(12936) &lt; &Seafood_Qty;">
						<ExPurify/>
						<If Condition="not IsOnMap(397)">
							<TeleportTo Name="Falcons Nest" AetheryteId="71" />
							<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
								<RunCode Name="BTN"/>
							</If>
							<MoveTo XYZ="461.7119, 212.5399, 696.9837"/>
						</If>
						<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
							<RunCode Name="BTN"/>
						</If>
						<ExGather DiscoverUnknowns="true" AlwaysGather="false" GatherStrategy="TouchAndGo" CordialType="&CordialType_Sand;" CordialTime="&CordialTime_Sand;" while="IsTimeBetween(0,4) and ItemCount(12936) &lt; &Seafood_Qty;" skipWindowDelay="1500">
							<Collectables>
								<Collectable Name="Clary Sage" Value="&Sand_Collect_Rate;"/>
								<Collectable Name="Furymint" Value="&Sand_Collect_Rate;"/>
								<Collectable Name="Highland Oregano" Value="&Sand_Collect_Rate;"/>
							</Collectables>
							<GatherRotation>RegularNode</GatherRotation>
							<HotSpots>
								<HotSpot XYZ="-586.7975, 127.4666, -406.9053" Radius="30" />
								<HotSpot XYZ="-511.3296, 128.6305, -455.8474" Radius="50"/>
								<HotSpot XYZ="-691.3636, 140.3503, -374.2292" Radius="50"/>
							</HotSpots>
						</ExGather>
					</While>
					<While Condition="IsTimeBetween(4,8) and ItemCount(12936) &lt; &Seafood_Qty;">
						<ExPurify/>
						<If Condition="not IsOnMap(398)">
							<TeleportTo Name="Tailfeather" AetheryteId="76" />
							<If Condition="Core.Me.CurrentJob != ClassJobType.Miner">
								<RunCode Name="MIN"/>
							</If>
							<MoveTo XYZ="520.1194, -51.27571, 40.14129"/>
							<ExFlyTo XYZ="36.562, 13.66749, 252.4461" Radius="3.0" />
							<ExFlyTo XYZ="-163.8157, 12.11641, 342.2419" Radius="3.0" />
						</If>
						<If Condition="Core.Me.CurrentJob != ClassJobType.Miner">
							<RunCode Name="MIN"/>
						</If>
						<ExGather DiscoverUnknowns="true" AlwaysGather="false" GatherStrategy="TouchAndGo" CordialType="&CordialType_Sand;" CordialTime="&CordialTime_Sand;" while="IsTimeBetween(4,8) and ItemCount(12936) &lt; &Seafood_Qty;" skipWindowDelay="1500">
							<Collectables>
								<Collectable Name="Radiant Fire Moraine" Value="&Sand_Collect_Rate;"/>
								<Collectable Name="Bright Fire Rock" Value="&Sand_Collect_Rate;"/>
								<Collectable Name="Fire Moraine" Value="&Sand_Collect_Rate;"/>
							</Collectables>
							<GatherRotation>RegularNode</GatherRotation>
							<HotSpots>
								<HotSpot XYZ="-254.241, -49.31017, 275.3868" Radius="30"/>
								<HotSpot XYZ="-307.5015, -51.15042, 330.267" Radius="30"/>
								<HotSpot XYZ="-148.6799, -61.24704, 394.047" Radius="20"/>
							</HotSpots>
						</ExGather>
					</While>
					<While Condition="IsTimeBetween(8,12) and ItemCount(12936) &lt; &Seafood_Qty;">
						<ExPurify/>
						<If Condition="not IsOnMap(398)">
							<TeleportTo Name="Tailfeather" AetheryteId="76" />
							<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
								<RunCode Name="BTN"/>
							</If>
							<MoveTo XYZ="520.1194, -51.27571, 40.14129"/>
							<ExFlyTo XYZ="36.562, 13.66749, 252.4461" Radius="3.0" />
							<ExFlyTo XYZ="-163.8157, 12.11641, 342.2419" Radius="3.0" />
						</If>
						<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
							<RunCode Name="BTN"/>
						</If>
						<ExGather DiscoverUnknowns="true" AlwaysGather="false" GatherStrategy="TouchAndGo" CordialType="&CordialType_Sand;" CordialTime="&CordialTime_Sand;" while="IsTimeBetween(8,12) and ItemCount(12936) &lt; &Seafood_Qty;" skipWindowDelay="1500">
							<Collectables>
								<Collectable Name="Black Soil" Value="&Sand_Collect_Rate;"/>
								<Collectable Name="Peat Moss" Value="&Sand_Collect_Rate;"/>
								<Collectable Name="Granular Clay" Value="&Sand_Collect_Rate;"/>
							</Collectables>
							<GatherRotation>RegularNode</GatherRotation>
							<HotSpots>
								<HotSpot XYZ="-617.4734, -98.22275, 486.038" Radius="30"/>
								<HotSpot XYZ="-553.9785, -76.84792, 419.580" Radius="30"/>
								<HotSpot XYZ="-569.1127, -88.61699, 546.949" Radius="30"/>
							</HotSpots>
						</ExGather>
					</While>
					<While Condition="IsTimeBetween(12,16) and ItemCount(12936) &lt; &Seafood_Qty; and not(ItemCount(6148) &lt; (&Seafood_Qty;*2) and IsTimeBetween(12,13))">
						<ExPurify/>
						<If Condition="not IsOnMap(400)">
							<TeleportTo Name="Moghome" AetheryteId="78" />
							<If Condition="Core.Me.CurrentJob != ClassJobType.Miner">
								<RunCode Name="MIN"/>
							</If>
							<ExFlyTo XYZ="315.8713, 27.29165, 265.4193" Radius="3.0" />
							<ExFlyTo XYZ="310.1847, -10.75076, -113.7604" Radius="3.0" />
						</If>
						<If Condition="Core.Me.CurrentJob != ClassJobType.Miner">
							<RunCode Name="MIN"/>
						</If>
						<ExGather DiscoverUnknowns="true" AlwaysGather="false" GatherStrategy="TouchAndGo" CordialType="&CordialType_Sand;" CordialTime="&CordialTime_Sand;" while="IsTimeBetween(12,16) and not(ItemCount(6148) &lt; (&Seafood_Qty;*2) and IsTimeBetween(12,13)) and ItemCount(12936) &lt; &Seafood_Qty;" skipWindowDelay="1500">
							<Collectables>
								<Collectable Name="Radiant Fire Moraine" Value="&Sand_Collect_Rate;"/>
								<Collectable Name="Bright Fire Rock" Value="&Sand_Collect_Rate;"/>
								<Collectable Name="Fire Moraine" Value="&Sand_Collect_Rate;"/>
							</Collectables>
							<GatherRotation>RegularNode</GatherRotation>
							<HotSpots>
								<HotSpot XYZ="322.2591, -20.08315, -149.3368" Radius="30"/>
								<HotSpot XYZ="320.6808, -21.97984, -216.2199" Radius="30"/>
								<HotSpot XYZ="299.7046, -29.75275, -107.2751" Radius="30"/>
							</HotSpots>
						</ExGather>
					</While>
					<While Condition="IsTimeBetween(16,20) and ItemCount(12936) &lt; &Seafood_Qty; and not(ItemCount(12903) &lt; (&Seafood_Qty;*2) and IsTimeBetween(18,19))">
						<ExPurify/>
						<If Condition="not IsOnMap(400)">
							<TeleportTo Name="Moghome" AetheryteId="78" />
							<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
								<RunCode Name="BTN"/>
							</If>
							<ExFlyTo XYZ="180.723, 70.2466, 32.25669" Radius="3.0" />
							<ExFlyTo XYZ="-113.2326, 1.693077, 369.2427" Radius="3.0" />
						</If>
						<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
							<RunCode Name="BTN"/>
						</If>
						<ExGather DiscoverUnknowns="true" AlwaysGather="false" GatherStrategy="TouchAndGo" CordialType="&CordialType_Sand;" CordialTime="&CordialTime_Sand;" while="IsTimeBetween(16,20) and not(ItemCount(12903) &lt; (&Seafood_Qty;*2) and IsTimeBetween(18,19)) and ItemCount(12936) &lt; &Seafood_Qty;" skipWindowDelay="1500">
							<Collectables>
								<Collectable Name="Black Soil" Value="&Sand_Collect_Rate;" />
								<Collectable Name="Peat Moss" Value="&Sand_Collect_Rate;" />
								<Collectable Name="Granular Clay" Value="&Sand_Collect_Rate;" />
							</Collectables>
							<GatherRotation>RegularNode</GatherRotation>
							<GatherSpots>
								<IndirectApproachGatherSpot ReturnToApproachLocation="false" ApproachLocation="-86.32848, -9.662621, 446.8793" nodeLocation="-88.15926, -8.882813, 447.7102" />
							</GatherSpots>
							<HotSpots>
								<HotSpot XYZ="-126.247, -9.62507, 378.8831" Radius="30"/>
								<HotSpot XYZ="-93.01031, 0.9097285, 430.5367" Radius="30"/>
								<HotSpot XYZ="4.89065, -7.601609, 373.6958" Radius="30"/>
							</HotSpots>
						</ExGather>
					</While>
					<While Condition="IsTimeBetween(20,24) and ItemCount(12936) &lt; &Seafood_Qty;">
						<ExPurify/>
						<If Condition="not IsOnMap(401)">
							<TeleportTo Name="Camp Cloudtop" AetheryteId="72" />
							<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
								<RunCode Name="BTN"/>
							</If>
							<MoveTo XYZ="-602.2142, -122.2923, 554.533" />
							<ExFlyTo XYZ="198.9948, -130.0014, 639.3207" Radius="3.0" />
						</If>
						<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
							<RunCode Name="BTN"/>
						</If>
						<ExGather DiscoverUnknowns="true" AlwaysGather="false" GatherStrategy="TouchAndGo" CordialType="&CordialType_Sand;" CordialTime="&CordialTime_Sand;" while="IsTimeBetween(20,24) and ItemCount(12936) &lt; &Seafood_Qty;" skipWindowDelay="1500">
							<Collectables>
								<Collectable Name="Clary Sage" Value="&Sand_Collect_Rate;"/>
								<Collectable Name="Furymint" Value="&Sand_Collect_Rate;"/>
								<Collectable Name="Highland Oregano" Value="&Sand_Collect_Rate;"/>
							</Collectables>
							<GatherRotation>RegularNode</GatherRotation>
							<HotSpots>
								<HotSpot XYZ="201.4897, -125.9551, 636.8804" Radius="30"/>
								<HotSpot XYZ="91.30701, -139.0224, 584.8624" Radius="30"/>
								<HotSpot XYZ="98.29739, -142.3631, 510.3914" Radius="30"/>
							</HotSpots>
						</ExGather>
					</While>
				</While>
			</If>
			<If Condition="not(ItemCount(12936) &lt; &Seafood_Qty;)">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I'm done with Duskborne Aethersand !"/>
			</If>
			<!-- Fire/Water Cluster -->
			<If Condition="ItemCount(19) &lt; &Seafood_Qty; or ItemCount(14) &lt; (&Seafood_Qty; * 2) and not(ItemCount(6148) &lt; (&Seafood_Qty;*2) and IsTimeBetween(12,13)) and not(ItemCount(12903) &lt; (&Seafood_Qty;*2) and IsTimeBetween(18,19))">
				<If Condition="ItemCount(19) &lt; &Seafood_Qty;">
					<ExLog Color="#FFC0CB" Message="Seafood Stew | I don't have enough Water Cluster !"/>
				</If>
				<If Condition="ItemCount(14) &lt; (&Seafood_Qty; * 2)">
					<ExLog Color="#FFC0CB" Message="Seafood Stew | I don't have enough Fire Cluster !"/>
				</If>
				<If Condition="not(IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))">
					<ExLog Color="#FFC0CB" Message="Seafood Stew | But I can't gather them yet !"/>
				</If>
				<If Condition="IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23)">
					<If Condition="not IsOnMap(154)">
						<TeleportTo Name="Revenant's Toll" AetheryteId="24" />
					</If>
					<If Condition="IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11)">
						<If Condition="Core.Me.CurrentJob != ClassJobType.Botanist">
							<RunCode Name="BTN"/>
						</If>
						<ExGather DiscoverUnknowns="true" loops="1" while="ItemCount(14) &lt; (&Seafood_Qty; * 2)" spawnTimeout="15" CordialType="&CordialType;" CordialTime="&CordialTime;" GatherIncrease="Yield" DisableRotationOverride="true">
							<GatherObjects>
								<GatherObject>Unspoiled Mature Tree</GatherObject>
							</GatherObjects>
							<ItemNames>
								<ItemName>Fire Cluster</ItemName>
							</ItemNames>
							<GatherRotation>Unspoiled</GatherRotation>
							<HotSpots>
								<HotSpot XYZ="509.2175, -3.772751, -426.0106" Radius="120"/>
							</HotSpots>
						</ExGather>
						<ExGather DiscoverUnknowns="true" loops="1" while="ItemCount(19) &lt; &Seafood_Qty; and not(ItemCount(14) &lt; (&Seafood_Qty; * 2))" spawnTimeout="15" CordialType="&CordialType;" CordialTime="&CordialTime;" GatherIncrease="Yield" DisableRotationOverride="true">
							<GatherObjects>
								<GatherObject>Unspoiled Mature Tree</GatherObject>
							</GatherObjects>
							<ItemNames>
								<ItemName>Water Cluster</ItemName>
							</ItemNames>
							<GatherRotation>Unspoiled</GatherRotation>
							<HotSpots>
								<HotSpot XYZ="509.2175, -3.772751, -426.0106" Radius="120"/>
							</HotSpots>
						</ExGather>
						<If Condition="IsTimeBetween(2,3)">
							<WaitWhile Condition ="IsTimeBetween(2,3)" />
						</If>
						<If Condition="IsTimeBetween(6,7)">
							<WaitWhile Condition ="IsTimeBetween(6,7)" />
						</If>
						<If Condition="IsTimeBetween(10,11)">
							<WaitWhile Condition ="IsTimeBetween(10,11)" />
						</If>
					</If>
					<If Condition="IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23)">
						<If Condition="Core.Me.CurrentJob != ClassJobType.Miner">
							<RunCode Name="MIN"/>
						</If>
						<ExGather DiscoverUnknowns="true" loops="1" while="ItemCount(14) &lt; (&Seafood_Qty; * 2)" spawnTimeout="15" CordialType="&CordialType;" CordialTime="&CordialTime;" GatherIncrease="Yield" DisableRotationOverride="true">
							<GatherObjects>
								<GatherObject>Unspoiled Rocky Outcrop</GatherObject>
							</GatherObjects>
							<ItemNames>
								<ItemName>Fire Cluster</ItemName>
							</ItemNames>
							<GatherRotation>Unspoiled</GatherRotation>
							<HotSpots>
								<HotSpot XYZ="345.458, -4.698928, -482.9557" Radius="120"/>
							</HotSpots>
						</ExGather>
						<ExGather DiscoverUnknowns="true" loops="1" while="ItemCount(19) &lt; &Seafood_Qty; and not(ItemCount(14) &lt; (&Seafood_Qty; * 2))" spawnTimeout="15" CordialType="&CordialType;" CordialTime="&CordialTime;" GatherIncrease="Yield" DisableRotationOverride="true">
							<GatherObjects>
								<GatherObject>Unspoiled Rocky Outcrop</GatherObject>
							</GatherObjects>
							<ItemNames>
								<ItemName>Water Cluster</ItemName>
							</ItemNames>
							<GatherRotation>Unspoiled</GatherRotation>
							<HotSpots>
								<HotSpot XYZ="345.458, -4.698928, -482.9557" Radius="120"/>
							</HotSpots>
						</ExGather>
						<If Condition="IsTimeBetween(14,15)">
							<WaitWhile Condition ="IsTimeBetween(14,15)" />
						</If>
						<If Condition="IsTimeBetween(18,19)">
							<WaitWhile Condition ="IsTimeBetween(18,19)" />
						</If>
						<If Condition="IsTimeBetween(22,23)">
							<WaitWhile Condition ="IsTimeBetween(22,23)" />
						</If>
					</If>
				</If>
			</If>
			<If Condition="not(ItemCount(19) &lt; &Seafood_Qty;)">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I'm done with Water Cluster !"/>
			</If>
			<If Condition="not(ItemCount(14) &lt; (&Seafood_Qty; * 2))">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I'm done with Fire Cluster !"/>
			</If>
			<!-- Fishing -->
			<!-- Rock Mussel | Blueclaw Shrimp -->
			<If Condition="(ItemCount(12722) &lt; &Seafood_Qty; or ItemCount(12733) &lt; &Seafood_Qty;) and (IsTimeBetween(1,13) or (IsTimeBetween(14,24) and not(ItemCount(12718) &lt; &Seafood_Qty;))) and not((ItemCount(12903) &lt; (&Seafood_Qty;*2) and IsTimeBetween(18,19)) or (ItemCount(6148) &lt; (&Seafood_Qty;*2) and IsTimeBetween(12,13)) or (ItemCount(19) &lt; &Seafood_Qty; and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))) or (ItemCount(14) &lt; (&Seafood_Qty; * 2) and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))))">
				<If Condition="ItemCount(12733) &lt; &Seafood_Qty;">
					<ExLog Color="#FFC0CB" Message="Seafood Stew | I don't have enough Rock Mussel !"/>
				</If>
				<If Condition="ItemCount(12722) &lt; &Seafood_Qty;">
					<ExLog Color="#FFC0CB" Message="Seafood Stew | I don't have enough Blueclaw Shrimp !"/>
				</If>
				<If Condition="not HasAtLeast(12704,20)">
					<ExLog Color="#FFC0CB" Message="Seafood Stew | Not enough bait available, I'm going to buy you some !"/>
					<If Condition="not IsOnMap(401)">
						<TeleportTo Name="Camp Cloudtop" AetheryteId="72" />
					</If>
					<ExMoveTo XYZ="-650.1684, -123.7523, 523.7875" ForceLanding="true"/>
					<BuyItem ItemId="12704" ItemCount="200" DialogOption="1" InteractDistance="3.0" NpcId="1011947" XYZ="-650.1684, -123.7523, 523.7875" />
				</If>
				<If Condition="not IsOnMap(398)">
					<TeleportTo Name="Tailfeather" AetheryteId="76" />
				</If>
				<RunCode Name="FSH"/>
				<MoveTo XYZ="516.1227, -51.274, 46.26479"/>
				<Fish Condition="HasAtLeast(12704,20) and (ItemCount(12722) &lt; &Seafood_Qty; or ItemCount(12733) &lt; &Seafood_Qty;) and (IsTimeBetween(1,13) or (IsTimeBetween(14,24) and not(ItemCount(12718) &lt; &Seafood_Qty;))) and not((ItemCount(12903) &lt; (&Seafood_Qty;*2) and IsTimeBetween(18,19)) or (ItemCount(6148) &lt; (&Seafood_Qty;*2) and IsTimeBetween(12,13)) or (ItemCount(19) &lt; &Seafood_Qty; and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))) or (ItemCount(14) &lt; (&Seafood_Qty; * 2) and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))))" snagging="true" minFish="25" maxFish="45" shuffleFishSpots="true" mooch="0" sitRate=".69" Bait="Stonefly Nymph">
					<Keepers>
						<Keeper name="Blueclaw Shrimp"/>
						<Keeper name="Rock Mussel"/>
					</Keepers>
					<FishSpots>
						<FishSpot xyz="491.977, -49.70995, -11.94302" heading="0,1.76" />
						<FishSpot xyz="499.6897, -47.27282, -77.20871" heading="0,4.3" />
						<FishSpot xyz="492.6555, -45.45501, -160.3043" heading="0,2.32" />
						<FishSpot xyz="457.8228, -46.36993, -240.3514" heading="0,5.11" />
						<FishSpot xyz="424.7966, -46.94623, -296.9168" heading="0,1.55" />
						<FishSpot xyz="419.9538, -46.35724, -388.0091" heading="0,5.14" />
					</FishSpots>
				</Fish>
			</If>
			<If Condition="not(ItemCount(12733) &lt; &Seafood_Qty;)">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I'm done with Rock Mussel !"/>
			</If>
			<If Condition="not(ItemCount(12722) &lt; &Seafood_Qty;)">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I'm done with Blueclaw Shrimp !"/>
			</If>
			<!-- Coerthan Crab -->
			<If Condition="ItemCount(12718) &lt; &Seafood_Qty; and (IsTimeBetween(14,24) or (IsTimeBetween(1,13) and not(ItemCount(12722) &lt; &Seafood_Qty;))) and not((ItemCount(12903) &lt; (&Seafood_Qty;*2) and IsTimeBetween(18,19)) or (ItemCount(6148) &lt; (&Seafood_Qty;*2) and IsTimeBetween(12,13)) or (ItemCount(19) &lt; &Seafood_Qty; and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))) or (ItemCount(14) &lt; (&Seafood_Qty; * 2) and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))))">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I don't have enough Coerthan Crab !"/>
				<If Condition="not HasAtLeast(12704,20)">
					<ExLog Color="#FFC0CB" Message="Seafood Stew | Not enough bait available, I'm going to buy you some !"/>
					<If Condition="not IsOnMap(401)">
						<TeleportTo Name="Camp Cloudtop" AetheryteId="72" />
					</If>
					<ExMoveTo XYZ="-650.1684, -123.7523, 523.7875" ForceLanding="true"/>
					<BuyItem ItemId="12704" ItemCount="200" DialogOption="1" InteractDistance="3.0" NpcId="1011947" XYZ="-650.1684, -123.7523, 523.7875" />
				</If>
				<If Condition="not IsOnMap(397)">
					<TeleportTo Name="Falcon's Nest" AetheryteId="71" />
					<RunCode Name="FSH"/>
					<ExFlyTo XYZ="447.5304, 231.6418, 698.439" Radius="3.0" />
					<ExFlyTo XYZ="358.4742, 262.5689, 138.6398" Radius="3.0" />
				</If>
				<RunCode Name="FSH"/>
				<Fish Condition="HasAtLeast(12704,20) and ItemCount(12718) &lt; &Seafood_Qty; and (IsTimeBetween(14,24) or (IsTimeBetween(1,13) and not(ItemCount(12722) &lt; &Seafood_Qty;))) and not((ItemCount(12903) &lt; (&Seafood_Qty;*2) and IsTimeBetween(18,19)) or (ItemCount(6148) &lt; (&Seafood_Qty;*2) and IsTimeBetween(12,13)) or (ItemCount(19) &lt; &Seafood_Qty; and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))) or (ItemCount(14) &lt; (&Seafood_Qty; * 2) and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))))" mooch="1" minFish="25" Patience="Patience" maxFish="45" shuffleFishSpots="false" sitRate=".69" Bait="Stonefly Nymph">
					<Keepers>
						<Keeper name="Coerthan Crab"/>
					</Keepers>
					<FishSpots>
						<FishSpot xyz="539.7755, 163.0297, -93.95975" heading="0,1.87" />
						<FishSpot xyz="536.4486, 164.4581, -142.5125" heading="0,0.52" />
						<FishSpot xyz="61.99739, 100.8643, 80.42252" heading="0,0.32" />
						<FishSpot xyz="47.89469, 100.9827, 109.8405" heading="0,1.76" />
					</FishSpots>
				</Fish>
			</If>
			<If Condition="not(ItemCount(12718) &lt; &Seafood_Qty;)">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I'm done with Coerthan Crab !"/>
			</If>
			<!-- Fish Resetting -->
			<If Condition="(IsTimeBetween(00,1) or IsTimeBetween(13,14)) and (ItemCount(12733) &lt; &Seafood_Qty; or ItemCount(12722) &lt; &Seafood_Qty; or ItemCount(12718) &lt; &Seafood_Qty;)">
				<ExLog Color="#FFC0CB" Message="Seafood Stew | I'm going to reset Fish !"/>
				<If Condition="not HasAtLeast(12704,20)">
					<ExLog Color="#FFC0CB" Message="Seafood Stew | Not enough bait available, I'm going to buy you some !"/>
					<If Condition="not IsOnMap(401)">
						<TeleportTo Name="Camp Cloudtop" AetheryteId="72" />
					</If>
					<ExMoveTo XYZ="-650.1684, -123.7523, 523.7875" ForceLanding="true"/>
					<BuyItem ItemId="12704" ItemCount="200" DialogOption="1" InteractDistance="3.0" NpcId="1011947" XYZ="-650.1684, -123.7523, 523.7875" />
				</If>
				<If Condition="not IsOnMap(401)">
					<TeleportTo Name="Camp Cloudtop" AetheryteId="72" />
					<If Condition="Core.Me.CurrentJob != ClassJobType.Fisher">
						<RunCode Name="FSH"/>
					</If>
					<MoveTo XYZ="-602.2142, -122.2923, 554.533" />
				</If>
				<ExFlyTo XYZ="203.5816, -109.9027, 652.8904" Radius="3.0"/>
				<RunCode Name="FSH"/>
				<Fish Condition="IsTimeBetween(00,1) or IsTimeBetween(13,14)" shuffleFishSpots="true" sitRate=".69" bait="Stonefly Nymph">
					<FishSpots>
						<FishSpot XYZ="218.9494, -125.2895, 677.1995" heading="0,0.2" />
						<FishSpot XYZ="252.9679, -125.2895, 658.6575" heading="0,1.44" />
						<FishSpot XYZ="220.3984, -125.2895, 631.2059" heading="0,3.8" />
						<FishSpot XYZ="182.4873, -135.0074, 635.0411" heading="0,4.76" />
					</FishSpots>
				</Fish>
			</If>
			<!-- Waiting -->
			<If Condition="not((ItemCount(12903) &lt; (&Seafood_Qty;*2) and IsTimeBetween(18,19)) or (ItemCount(6148) &lt; (&Seafood_Qty;*2) and IsTimeBetween(12,13)) or (ItemCount(19) &lt; &Seafood_Qty; and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))) or (ItemCount(14) &lt; (&Seafood_Qty; * 2) and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23)))) and not(ItemCount(12733) &lt; &Seafood_Qty;) and not(ItemCount(12722) &lt; &Seafood_Qty;) and not(ItemCount(12718) &lt; &Seafood_Qty;) and not(ItemCount(12936) &lt; &Seafood_Qty;) and(ItemCount(12903) &lt; (&Seafood_Qty;*2) or ItemCount(6148) &lt; (&Seafood_Qty;*2) or ItemCount(19) &lt; &Seafood_Qty; or ItemCount(14) &lt; (&Seafood_Qty; * 2) or ItemCount(12936) &lt; &Seafood_Qty; or ItemCount(12733) &lt; &Seafood_Qty; or ItemCount(12722) &lt; &Seafood_Qty; or ItemCount(12718) &lt; &Seafood_Qty;)">
				<TeleportTo Name="Home Sweet Home" aetheryteId="&Waiting_AetheryteId;" />
				<RunCode Name="Dismount"/>
				<ExLog Color="#FFC0CB" Message="Seafood Stew | Nothing to do, waiting for something to spawn !"/>
				<WaitWhile Condition ="not((ItemCount(12903) &lt; (&Seafood_Qty;*2) and IsTimeBetween(18,19)) or (ItemCount(6148) &lt; (&Seafood_Qty;*2) and IsTimeBetween(12,13)) or (ItemCount(19) &lt; &Seafood_Qty; and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))) or (ItemCount(14) &lt; (&Seafood_Qty; * 2) and (IsTimeBetween(2,3) or IsTimeBetween(6,7) or IsTimeBetween(10,11) or IsTimeBetween(14,15) or IsTimeBetween(18,19) or IsTimeBetween(22,23))))" />
			</If>
		</While>
		<If Condition="not(ItemCount(12903) &lt; (&Seafood_Qty;*2) or ItemCount(6148) &lt; (&Seafood_Qty;*2) or ItemCount(19) &lt; &Seafood_Qty; or ItemCount(19) &lt; &Seafood_Qty; or ItemCount(12936) &lt; &Seafood_Qty; or ItemCount(12733) &lt; &Seafood_Qty; or ItemCount(12722) &lt; &Seafood_Qty; or ItemCount(12718) &lt; &Seafood_Qty;)">
			<ExLog Color="#FFC0CB" Message="Seafood Stew | All materials gathered !"/>
		</If>
		<!-- Crafting -->
		<If Condition="&Craft; !=0">
			<ExLog Color="#FFC0CB" Message="Seafood Stew | It's time to craft !"/>
			<TeleportTo name="Home Sweet Home" aetheryteId="&Waiting_AetheryteId;" />
			<RunCode Name="CUL" />
			<RunCode Name="Dismount"/>
			<WaitTimer WaitTime="3"/>
			<!-- Seafood Stew -->
			<While Condition="ItemCount(12903) &gt; 1 and ItemCount(6148) &gt; 1 and ItemCount(12718) &gt; 0 and ItemCount(12936) &gt; 0 and ItemCount(12733) &gt; 0 and ItemCount(12722) &gt; 0 and ItemCount(14) &gt; 1 and ItemCount(19) &gt; 0">
				<EatFood ItemId="&ID_FOOD;" HqOnly="True" />
				<!-- Required Skills : Maker's Mark, Flawless Synthesis, Steady Hand 2, Careful synthesis 2, Piece by Piece, Hasty Touch, Byregot's Blessing, Comfort Zone, Waste Not II -->
				<!-- Optionnals : Innovation, Tricks of the Trade, Reclaim -->
				<Synthesize RecipeId="31225" MinimumCp="437" HqMats="-1,-1,-1,-1,-1,-1" RequiredSkills="100178, 100083, 281, 100069, 100039, 100108, 100009, 286, 285" />
				<CraftActionByName Name="Maker's Mark" />
				<CraftActionByName Name="Comfort Zone" />
				<CraftActionByName Name="Steady Hand" />
				<CraftActionByName Name="Piece by Piece" />
				<CraftActionByName Name="Piece by Piece" />
				<While Condition="Core.Player.HasAura(878) and CraftingManager.Progress &lt; 854">
					<CraftActionByName Name="Flawless Synthesis" />
				</While>
				<If Condition="&ToT; != 0">
					<RunCode Name="ToT"/>
				</If>
				<CraftActionByName Name="Comfort Zone" />
				<If Condition="&ToT; != 0">
					<RunCode Name="ToT"/>
				</If>
				<CraftActionByName Name="Inner Quiet" />
				<If Condition="&ToT; != 0">
					<RunCode Name="ToT"/>
				</If>
				<CraftActionByName Name="Waste Not II" />
				<CraftActionByName Name="Steady Hand II" />
				<CraftActionByName Name="Hasty Touch" />
				<CraftActionByName Name="Hasty Touch" />
				<CraftActionByName Name="Hasty Touch" />
				<CraftActionByName Name="Hasty Touch" />
				<CraftActionByName Name="Hasty Touch" />
				<CraftActionByName Name="Careful Synthesis II" />
				<CraftActionByName Name="Careful Synthesis II" />
				<If Condition="&ToT; != 0">
					<RunCode Name="ToT"/>
				</If>
				<CraftActionByName Name="Comfort Zone" />
				<If Condition="&ToT; != 0">
					<RunCode Name="ToT"/>
				</If>
				<CraftActionByName Name="Steady Hand II" />
				<CraftActionByName Name="Hasty Touch" />
				<CraftActionByName Name="Master's Mend II" />
				<CraftActionByName Name="Hasty Touch" />
				<CraftActionByName Name="Hasty Touch" />
				<CraftActionByName Name="Hasty Touch" />
				<If Condition="&ToT; != 0">
					<RunCode Name="ToT"/>
				</If>
				<CraftActionByName Name="Steady Hand II" />
				<RunCode Name="BBCheck"/>
				<RunCode Name="TrickTouch"/>
				<RunCode Name="BBCheck"/>
				<RunCode Name="TrickTouch2"/>
				<RunCode Name="BBCheck"/>
				<If Condition="&Reclaim; != 0">
					<RunCode Name="ReclaimCheck"/>
				</If>
				<CraftActionByName Name="Great Strides" />
				<RunCode Name="InnovationCheck"/>
				<CraftActionByName Name="Byregot's Blessing" />
				<CraftActionByName Name="Careful Synthesis II" />
			</While>
			<StopCrafting/>
		</If>
		<TeleportTo Name="Home Sweet Home" aetheryteId="&Waiting_AetheryteId;" />
		<ExLog Color="#FFC0CB" Message="Seafood Stew | Seafood Stew Profile Completed ! ༼ つ ͡◕ Ѿ ͡◕ ༽つ Entrax "/>
	</Order>
</Profile>